#!/bin/bash

TOP=$(readlink -f $(dirname ${BASH_SOURCE:-$0})/..)

if [ ! -f $TOP/scripts/functions.sh ]; then
	echo "Failed to source functions.sh" && exit 1
else
	. $TOP/scripts/functions.sh
fi

# Go cross compile options
export GOARCH=arm
export CGOCC
export CGO_CFLAGS="-g -O2 -I$TOP/build/libraries/usr/include"
export CGO_LDFLAGS="-g -O2 -L$TOP/build/libraries/usr/lib"

PACKAGE=github.com/brijohn/pimodem

compile_alsa() {
	local ver=$1
	mkdir -p $TOP/build/downloads || return $?
	wget -q -O $TOP/build/downloads/alsa-lib-${ver}.tar.bz2 ftp://ftp.alsa-project.org/pub/lib/alsa-lib-${ver}.tar.bz2 || return $?
	tar jxvf $TOP/build/downloads/alsa-lib-${ver}.tar.bz2 -C $TOP/build/downloads >/dev/null 2>&1 || return $?
	(
	pushd $TOP/build/downloads/alsa-lib-${ver}
	CC=${CGOCC} ./configure --host=arm-linux || exit 1
	make --no-print-directory || exit 1
	make install DESTDIR=$TOP/build/libraries/ || exit 1
	popd
	) >/dev/null 2>&1 || return $?
}

install_pimodem() {
	local serial=$1
	local logdest=$2
	local loglevel=$3
	local port=$4
	local ipaddr=$5
	mkdir -p $BUILDDIR/$PKGNAME/data/etc/init.d || return $?
	mkdir -p $BUILDDIR/$PKGNAME/data/etc/conf.d || return $?
	mkdir -p $BUILDDIR/$PKGNAME/data/usr/sbin || return $?
	mkdir -p $BUILDDIR/$PKGNAME/data/usr/lib/firmware || return $?
	git submodule update --init --remote pimodem || return $?
	make --no-print-directory -C $TOP/pimodem || return $?
	install -m 755 -D -t $BUILDDIR/$PKGNAME/data/usr/sbin $TOP/pimodem/src/bin/$PACKAGE || return $?
	install -m 755 -D -t $BUILDDIR/$PKGNAME/data/usr/lib/firmware $TOP/pimodem/eeprom/pimodem.eep || return $?
	cat > "$BUILDDIR/$PKGNAME/data/etc/conf.d/pimodem" <<-OPENRC-CONF
		SERIAL=${serial}
		LOGDEST=${logdest}
		PORT=${port}
		IPADDR=${ipaddr}
		LOGLEVEL=${loglevel}
	OPENRC-CONF
	cat > "$BUILDDIR/$PKGNAME/data/etc/init.d/pimodem" <<-'OPENRC-INIT'
		#!/sbin/openrc-run

		command=/usr/sbin/pimodem
		command_args="-d ${SERIAL} --speed=${BAUDRATE} --logger=${LOGDEST} --level=${LOGLEVEL} --port=${PORT} --ip=${IPADDR}"
		command_background=true
		pidfile="/var/run/${RC_SVCNAME}.pid"

		depend() {
		    need net
		    want logger
		}
	OPENRC-INIT
	chmod 755 "$BUILDDIR/$PKGNAME/data/etc/init.d/pimodem" || return $?
}

generate_metafiles() {
	local pkginfo=$BUILDDIR/$PKGNAME/metadata/.PKGINFO
	local builddate=$(date -u "+%s")
	local size=$(du -sk $BUILDDIR/$PKGNAME/data | awk '{print $1 * 1024}')
	mkdir -p $BUILDDIR/$PKGNAME/metadata || return $?
	cat > "$pkginfo" <<-EOF
		pkgname = $PKGNAME
		pkgver = $PKGVER-$PKGREV
		pkgdesc = Hayes compatable modem emualtor for the raspberry pi
		url = http://github.com/brijohn/pimodem
		maintainer = $MAINTAINER
		packager = $PACKAGER
		builddate = $builddate
		size = $size
		arch = armhf
		origin = $PKGNAME
		license = GPL-2.0
		depend = alsa-lib
		commit = $(last_commit $TOP/pimodem)
	EOF
}

create_apk() {
	local pkginfo=$BUILDDIR/$PKGNAME/metadata/.PKGINFO
	local apk="$PKGNAME-$PKGVER-$PKGREV.apk"
	pushd $BUILDDIR/$PKGNAME/data/ >/dev/null
	tar --xattrs -f - -c * | abuild-tar --hash | gzip -9 >"$BUILDDIR/$PKGNAME/data.tar.gz"
	popd >/dev/null
	local sha256=$(sha256sum "$BUILDDIR/$PKGNAME/data.tar.gz" | cut -f1 -d' ')
	echo "datahash = $sha256" >> "$pkginfo"
	pushd $BUILDDIR/$PKGNAME/metadata/ >/dev/null
	tar -f - -c $(basename $pkginfo) | abuild-tar --cut \
			| gzip -9 > "$BUILDDIR/$PKGNAME/control.tar.gz"
	popd >/dev/null
	do_sign $BUILDDIR/$PKGNAME/control.tar.gz
	cat $BUILDDIR/$PKGNAME/control.tar.gz $BUILDDIR/$PKGNAME/data.tar.gz > "$BUILDDIR/$PKGNAME/$apk"
}

rm -rf $BUILDDIR/$PKGNAME
mkdir -p $BUILDDIR/$PKGNAME || exit 1

compile_alsa $ALSA_VERSION
install_pimodem /dev/ttyAMA0 syslog $LOGLEVEL 6400 0.0.0.0 || exit 1
generate_metafiles || exit 1
create_apk || exit 1

exit 0
